version: "3"

services:

  timescaledb:
    image: timescale/timescaledb:latest-pg10
    volumes:
      - "timescaledb-data:/var/lib/postgresql/data"
      - ./sql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./sql/cpu_usage.csv:/docker-entrypoint-initdb.d/cpu_usage.csv
    env_file:
      - dev.env

  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - ./sql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./sql/cpu_usage.csv:/docker-entrypoint-initdb.d/cpu_usage.csv
    env_file:
      - dev.env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  redis:
    image: redis:alpine
    container_name: redis
    ports: ["6379"]

  worker_a:
    build: ./worker_simple
    command: celery worker -A entrypoint_celery.celery --concurrency=8 --loglevel=info -Ofair -Q QueueA
    volumes:
      - "./worker_simple/server:/app/server"
    env_file:
      - dev.env
    depends_on:
      - "redis"
      - "postgres"
      - "timescaledb"

  worker_b:
    build: ./worker_simple
    command: celery worker -A entrypoint_celery.celery --concurrency=8 --loglevel=info -Ofair -Q QueueB
    volumes:
      - "./worker_simple/server:/app/server"
    env_file:
      - dev.env
    depends_on:
      - "redis"
      - "postgres"
      - "timescaledb"

  worker_stats:
    build: ./worker_simple
    command: celery worker -A entrypoint_celery.celery --loglevel=info -Ofair -Q stats
    volumes:
      - "./worker_simple/server:/app/server"
    env_file:
      - dev.env
    depends_on:
      - "redis"
      - "postgres"
      - "timescaledb"

  api:
    build: ./worker_simple
    expose:
      - "5000"
    ports:
      - "5000:5000"
    #command: "gunicorn -w2 entrypoint_api:app -b 0.0.0.0:5000 --log-level warning --error-logfile=-"
    command: python entrypoint_api.py --port 5000 --debug
    stdin_open: true
    tty: true
    env_file:
      - dev.env
    volumes:
      - "./worker_simple/server:/app/server"
    depends_on:
      - "redis"
      - "postgres"
      - "timescaledb"

  flower:
    build: ./worker_simple
    ports:
      - "5555:5555"
    entrypoint: flower
    command:  -A entrypoint_celery.celery --port=5555
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - "redis"
      - "postgres"
      - "timescaledb"


volumes:
  postgres-data:
  timescaledb-data:
